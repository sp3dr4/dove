{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A fast and simple URL shortener service",
        "title": "Dove URL Shortener API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/health": {
            "get": {
                "description": "Check if the service is running",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/shorten": {
            "post": {
                "description": "Create a shortened URL from a long URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Create a short URL",
                "parameters": [
                    {
                        "description": "URL to shorten",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateURLRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created short URL",
                        "schema": {
                            "$ref": "#/definitions/main.URLResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "schema": {
                            "$ref": "#/definitions/main.ValidationErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Short code already exists",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{shortCode}": {
            "get": {
                "description": "Redirect to the original URL using the short code",
                "tags": [
                    "urls"
                ],
                "summary": "Redirect to original URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short code",
                        "name": "shortCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Redirect to original URL"
                    },
                    "404": {
                        "description": "Short URL not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.CreateURLRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "customAlias": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3,
                    "example": "mylink"
                },
                "url": {
                    "type": "string",
                    "example": "https://example.com/very/long/url"
                }
            }
        },
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-31T12:00:00Z"
                }
            }
        },
        "main.URLResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-31T12:00:00Z"
                },
                "originalUrl": {
                    "type": "string",
                    "example": "https://example.com"
                },
                "shortCode": {
                    "type": "string",
                    "example": "abc123"
                },
                "shortUrl": {
                    "type": "string",
                    "example": "http://localhost:8080/abc123"
                }
            }
        },
        "main.ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "string",
                    "example": "Validation failed"
                }
            }
        }
    }
}