# golangci-lint configuration
# https://golangci-lint.run/usage/configuration/

run:
  # Timeout for analysis
  timeout: 5m
  
  # Exit code when at least one issue was found
  issues-exit-code: 1
  
  # Include test files
  tests: true
  
  # Go version
  go: "1.24"

# Output configuration
output:
  # Format of output
  formats:
    - format: colored-line-number
  
  # Print lines of code with issue
  print-issued-lines: true
  
  # Print linter name in the end of issue text
  print-linter-name: true
  
  # Sort results by: filepath, line and column
  sort-results: true

# Linter settings
linters-settings:
  
  # Cyclomatic complexity
  cyclop:
    max-complexity: 15
    skip-tests: true
  
  # Function length
  funlen:
    lines: 80
    statements: 50
  
  # Error handling
  errcheck:
    check-type-assertions: true
    check-blank: true
  
  # Code style
  gofmt:
    simplify: true
  
  goimports:
    local-prefixes: github.com/sp3dr4/dove
  
  # Linting rules
  govet:
    enable-all: true
    settings:
      shadow:
        strict: true
  
  # Line length
  lll:
    line-length: 120
    tab-width: 4
  
  # Magic numbers
  mnd:
    checks:
      - argument
      - case
      - condition
      - operation
      - return
      - assign
    ignored-numbers:
      - '0'
      - '1'
      - '2'
      - '10'
      - '100'
    ignored-functions:
      - 'strconv.FormatInt'
      - 'strconv.FormatUint'
      - 'strconv.ParseInt'
      - 'strconv.ParseUint'
  
  # Unused code
  unused:
    check-exported: false
  
  # Security
  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G104  # Unhandled errors in deferred functions
      - G307  # Deferring unsafe method
  
  # Code duplication
  dupl:
    threshold: 150
  
  # Cognitive complexity
  gocognit:
    min-complexity: 20
  
  # Nesting depth
  nestif:
    min-complexity: 4
  
  # Interface pollution
  interfacebloat:
    max: 5
  
  # Struct tags
  tagliatelle:
    case:
      use-field-name: true
      rules:
        json: camel
        yaml: camel
        xml: camel
        bson: camel
        avro: snake
        mapstructure: kebab

# Enabled linters
linters:
  enable:
    # Default linters
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    
    # Additional linters
    - bodyclose
    - contextcheck
    - cyclop
    - dupl
    - durationcheck
    - errname
    - errorlint
    - exhaustive
    - funlen
    - gci
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gofmt
    - gofumpt
    - goimports
    - mnd
    - goprintffuncname
    - gosec
    - importas
    - interfacebloat
    - lll
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - promlinter
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tagliatelle
    - usetesting
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - wastedassign
    - whitespace
    - copyloopvar
  
  disable:
    - depguard
    - dogsled
    - forbidigo
    - forcetypeassert
    - gochecknoglobals
    - gochecknoinits
    - godox
    - err113
    - goheader
    - gomodguard
    - grouper
    - ireturn
    - maintidx
    - nlreturn
    - paralleltest
    - testableexamples
    - varnamelen
    - wrapcheck
    - wsl

# Issues configuration
issues:
  # Skip directories
  exclude-dirs:
    - vendor
    - testdata
    - examples
    - tmp
  
  # Skip files
  exclude-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"
    - "mock_.*\\.go$"
  
  # Make issues output unique by line
  uniq-by-line: true
  
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - mnd
        - funlen
        - gocognit
        - cyclop
    
    # Exclude error check for fmt.Fprintf/Fprint when errors are explicitly ignored
    - path: main\.go
      text: "Error return value of `fmt\\.(Fprintf|Fprint)` is not checked"
      linters:
        - errcheck
    
    # Exclude known linters from partially hard-vendored code
    - path: internal/pkg
      linters:
        - dupl
        - lll
    
    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "
    
    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"
    
    # Exclude some gosec messages
    - linters:
        - gosec
      text: "G204:"
  
  # Independently from option `exclude` we use default exclude patterns
  exclude-use-default: false
  
  # Maximum issues count per one linter
  max-issues-per-linter: 0
  
  # Maximum count of issues with the same text
  max-same-issues: 0
  
  # Show only new issues
  new: false
  
  # Fix found issues (if it's supported by the linter)
  fix: false